---
name: Release collection
on:
  workflow_call:
    inputs:
      collection_fqcn:
        required: true
        type: string
      downstream_name:
        required: false
        type: string
    secrets:
      galaxy_token:
        required: true
      jira_webhook:
        required: false

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      actions: write
      checks: write
      contents: write
      deployments: write
      packages: write
      pages: write
    outputs:
      tag_version: ${{ steps.get_version.outputs.TAG_VERSION }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          cache: 'pip'

      - name: Get current version
        id: get_version
        run: echo "::set-output name=TAG_VERSION::$(grep version galaxy.yml | awk -F'"' '{ print $2 }')"

      - name: Check if tag exists
        id: check_tag
        run: echo "::set-output name=TAG_EXISTS::$(git tag | grep ${{ steps.get_version.outputs.TAG_VERSION }})"

      - name: Fail if tag exists
        if: ${{ steps.get_version.outputs.TAG_VERSION == steps.check_tag.outputs.TAG_EXISTS }}
        uses: actions/github-script@v3
        with:
          script: |
              core.setFailed('Release tag already exists')

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ansible-core antsibull
          sudo apt --fix-missing update
          sudo apt install -y sed hub

      - name: Build collection
        run: |
          ansible-galaxy collection build .

      - name: Create changelog and documentation
        uses: ansible-middleware/collection-docs-action@main
        with:
          collection_fqcn: ${{ inputs.collection_fqcn }}
          collection_repo: ${{ github.repository }}
          dependencies: false
          commit_changelog: true
          commit_ghpages: false
          changelog_release: true
          generate_docs: false
          token: ${{ secrets.GITHUB_TOKEN }}
          bot_email: ansible-middleware-core@redhat.com
          bot_account: ansible-middleware-core

      - name: Publish collection
        env:
          ANSIBLE_GALAXY_API_KEY: ${{ secrets.galaxy_token }}
        run: |
          ansible-galaxy collection publish *.tar.gz --api-key $ANSIBLE_GALAXY_API_KEY

      - name: Create release tag
        run: |
          git config user.name ansible-middleware-core
          git config user.email ansible-middleware-core@redhat.com
          git tag -a ${{ steps.get_version.outputs.TAG_VERSION }} -m "Release v${{ steps.get_version.outputs.TAG_VERSION }}" || true
          git push origin --tags

      - name: Publish Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.TAG_VERSION }}
          files: "*.tar.gz"
          body_path: gh-release.md

      - name: Get next version
        id: bump_version
        run: echo "::set-output name=NEXT_VERSION::$(echo ${{ steps.get_version.outputs.TAG_VERSION }} | awk -F. '{$NF = $NF + 1;} 1' | sed 's/ /./g' )"

      - name: Create next version in jira
        env:
          JIRA_WEBHOOK: ${{ secrets.jira_webhook }}
          DOWNSTREAM_NAME: ${{ inputs.downstream_name }}
          NEXT_VERSION: ${{ steps.bump_version.outputs.NEXT_VERSION }}
        run: |
          if [[ ! -z "$JIRA_WEBHOOK" ]]; then
             curl -X POST -H 'Content-type: application/json' --data '{"data": {"version":"${DOWNSTREAM_NAME}-${NEXT_VERSION}"}}' $JIRA_WEBHOOK 
          fi

      - name: Bump version
        env:
          TAG_VERSION: ${{ steps.get_version.outputs.TAG_VERSION }}
          NEXT_VERSION: ${{ steps.bump_version.outputs.NEXT_VERSION }}
        run: |
          git config user.name ansible-middleware-core
          git config user.email ansible-middleware-core@redhat.com
          git checkout main || true
          git pull || true
          sed -i -e "s#version: \"$TAG_VERSION\"#version: \"$NEXT_VERSION\"#" galaxy.yml
          git add galaxy.yml
          git commit -m "Bump version to $NEXT_VERSION"
          git push
